{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"emit\"];import{CommonActions}from'@react-navigation/routers';import*as React from'react';import NavigationBuilderContext from'./NavigationBuilderContext';export default function useNavigationCache(_ref){let{state,getState,navigation,setOptions,router,emitter}=_ref;const{stackRef}=React.useContext(NavigationBuilderContext);const cache=React.useMemo(()=>({current:{}}),[getState,navigation,setOptions,router,emitter]);const actions=Object.assign({},router.actionCreators,CommonActions);cache.current=state.routes.reduce((acc,route)=>{const previous=cache.current[route.key];if(previous){acc[route.key]=previous;}else{const rest=_objectWithoutPropertiesLoose(navigation,_excluded);const dispatch=thunk=>{const action=typeof thunk==='function'?thunk(getState()):thunk;if(action!=null){navigation.dispatch(Object.assign({source:route.key},action));}};const withStack=callback=>{let isStackSet=false;try{if(false&&stackRef&&!stackRef.current){stackRef.current=new Error().stack;isStackSet=true;}callback();}finally{if(isStackSet&&stackRef){stackRef.current=undefined;}}};const helpers=Object.keys(actions).reduce((acc,name)=>{acc[name]=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return withStack(()=>dispatch(actions[name](...args)));};return acc;},{});acc[route.key]=Object.assign({},rest,helpers,emitter.create(route.key),{dispatch:thunk=>withStack(()=>dispatch(thunk)),getParent:id=>{if(id!==undefined&&id===rest.getId()){return acc[route.key];}return rest.getParent(id);},setOptions:options=>setOptions(o=>Object.assign({},o,{[route.key]:Object.assign({},o[route.key],options)})),isFocused:()=>{const state=getState();if(state.routes[state.index].key!==route.key){return false;}return navigation?navigation.isFocused():true;}});}return acc;},{});return cache.current;}","map":{"version":3,"names":["CommonActions","React","NavigationBuilderContext","useNavigationCache","_ref","state","getState","navigation","setOptions","router","emitter","stackRef","useContext","cache","useMemo","current","actions","Object","assign","actionCreators","routes","reduce","acc","route","previous","key","rest","_objectWithoutPropertiesLoose","_excluded","dispatch","thunk","action","source","withStack","callback","isStackSet","Error","stack","undefined","helpers","keys","name","_len","arguments","length","args","Array","_key","create","getParent","id","getId","options","o","isFocused","index"],"sources":["C:\\Users\\Admin\\Documents\\shopnow-app\\node_modules\\@react-navigation\\core\\src\\useNavigationCache.tsx"],"sourcesContent":["import {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport type { NavigationHelpers, NavigationProp } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options<\n  State extends NavigationState,\n  EventMap extends Record<string, any>\n> = {\n  state: State;\n  getState: () => State;\n  navigation: NavigationHelpers<ParamListBase> &\n    Partial<NavigationProp<ParamListBase, string, any, any, any>>;\n  setOptions: (\n    cb: (options: Record<string, object>) => Record<string, object>\n  ) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\ntype NavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n> = Record<\n  string,\n  NavigationProp<\n    ParamListBase,\n    string,\n    string | undefined,\n    State,\n    ScreenOptions,\n    EventMap\n  >\n>;\n\n/**\n * Hook to cache navigation objects for each screen in the navigator.\n * It's important to cache them to make sure navigation objects don't change between renders.\n * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n */\nexport default function useNavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>({\n  state,\n  getState,\n  navigation,\n  setOptions,\n  router,\n  emitter,\n}: Options<State, EventMap>) {\n  const { stackRef } = React.useContext(NavigationBuilderContext);\n\n  // Cache object which holds navigation objects for each screen\n  // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n  // In reality, these deps will rarely change, if ever\n  const cache = React.useMemo(\n    () => ({ current: {} as NavigationCache<State, ScreenOptions, EventMap> }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getState, navigation, setOptions, router, emitter]\n  );\n\n  const actions = {\n    ...router.actionCreators,\n    ...CommonActions,\n  };\n\n  cache.current = state.routes.reduce<\n    NavigationCache<State, ScreenOptions, EventMap>\n  >((acc, route) => {\n    const previous = cache.current[route.key];\n\n    type Thunk =\n      | NavigationAction\n      | ((state: State) => NavigationAction | null | undefined);\n\n    if (previous) {\n      // If a cached navigation object already exists, reuse it\n      acc[route.key] = previous;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { emit, ...rest } = navigation;\n\n      const dispatch = (thunk: Thunk) => {\n        const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n\n        if (action != null) {\n          navigation.dispatch({ source: route.key, ...action });\n        }\n      };\n\n      const withStack = (callback: () => void) => {\n        let isStackSet = false;\n\n        try {\n          if (\n            process.env.NODE_ENV !== 'production' &&\n            stackRef &&\n            !stackRef.current\n          ) {\n            // Capture the stack trace for devtools\n            stackRef.current = new Error().stack;\n            isStackSet = true;\n          }\n\n          callback();\n        } finally {\n          if (isStackSet && stackRef) {\n            stackRef.current = undefined;\n          }\n        }\n      };\n\n      const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n        (acc, name) => {\n          acc[name] = (...args: any) =>\n            withStack(() =>\n              // @ts-expect-error: name is a valid key, but TypeScript is dumb\n              dispatch(actions[name](...args))\n            );\n\n          return acc;\n        },\n        {}\n      );\n\n      acc[route.key] = {\n        ...rest,\n        ...helpers,\n        // FIXME: too much work to fix the types for now\n        ...(emitter.create(route.key) as any),\n        dispatch: (thunk: Thunk) => withStack(() => dispatch(thunk)),\n        getParent: (id?: string) => {\n          if (id !== undefined && id === rest.getId()) {\n            // If the passed id is the same as the current navigation id,\n            // we return the cached navigation object for the relevant route\n            return acc[route.key];\n          }\n\n          return rest.getParent(id);\n        },\n        setOptions: (options: object) =>\n          setOptions((o) => ({\n            ...o,\n            [route.key]: { ...o[route.key], ...options },\n          })),\n        isFocused: () => {\n          const state = getState();\n\n          if (state.routes[state.index].key !== route.key) {\n            return false;\n          }\n\n          // If the current screen is focused, we also need to check if parent navigator is focused\n          // This makes sure that we return the focus state in the whole tree, not just this navigator\n          return navigation ? navigation.isFocused() : true;\n        },\n      };\n    }\n\n    return acc;\n  }, {});\n\n  return cache.current;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}