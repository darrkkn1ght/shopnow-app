{"ast":null,"code":"import{nanoid}from'nanoid/non-secure';const BaseRouter={getStateForAction(state,action){switch(action.type){case'SET_PARAMS':{const index=action.source?state.routes.findIndex(r=>r.key===action.source):state.index;if(index===-1){return null;}return Object.assign({},state,{routes:state.routes.map((r,i)=>i===index?Object.assign({},r,{params:Object.assign({},r.params,action.payload.params)}):r)});}case'RESET':{const nextState=action.payload;if(nextState.routes.length===0||nextState.routes.some(route=>!state.routeNames.includes(route.name))){return null;}if(nextState.stale===false){if(state.routeNames.length!==nextState.routeNames.length||nextState.routeNames.some(name=>!state.routeNames.includes(name))){return null;}return Object.assign({},nextState,{routes:nextState.routes.map(route=>route.key?route:Object.assign({},route,{key:`${route.name}-${nanoid()}`}))});}return nextState;}default:return null;}},shouldActionChangeFocus(action){return action.type==='NAVIGATE';}};export default BaseRouter;","map":{"version":3,"names":["nanoid","BaseRouter","getStateForAction","state","action","type","index","source","routes","findIndex","r","key","Object","assign","map","i","params","payload","nextState","length","some","route","routeNames","includes","name","stale","shouldActionChangeFocus"],"sources":["C:\\Users\\Admin\\Documents\\shopnow-app\\node_modules\\@react-navigation\\routers\\src\\BaseRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport type {\n  CommonNavigationAction,\n  NavigationState,\n  PartialState,\n} from './types';\n\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction<State extends NavigationState>(\n    state: State,\n    action: CommonNavigationAction\n  ): State | PartialState<State> | null {\n    switch (action.type) {\n      case 'SET_PARAMS': {\n        const index = action.source\n          ? state.routes.findIndex((r) => r.key === action.source)\n          : state.index;\n\n        if (index === -1) {\n          return null;\n        }\n\n        return {\n          ...state,\n          routes: state.routes.map((r, i) =>\n            i === index\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\n              : r\n          ),\n        };\n      }\n\n      case 'RESET': {\n        const nextState = action.payload as State | PartialState<State>;\n\n        if (\n          nextState.routes.length === 0 ||\n          nextState.routes.some(\n            (route: { name: string }) => !state.routeNames.includes(route.name)\n          )\n        ) {\n          return null;\n        }\n\n        if (nextState.stale === false) {\n          if (\n            state.routeNames.length !== nextState.routeNames.length ||\n            nextState.routeNames.some(\n              (name) => !state.routeNames.includes(name)\n            )\n          ) {\n            return null;\n          }\n\n          return {\n            ...nextState,\n            routes: nextState.routes.map((route) =>\n              route.key ? route : { ...route, key: `${route.name}-${nanoid()}` }\n            ),\n          };\n        }\n\n        return nextState;\n      }\n\n      default:\n        return null;\n    }\n  },\n\n  shouldActionChangeFocus(action: CommonNavigationAction) {\n    return action.type === 'NAVIGATE';\n  },\n};\n\nexport default BaseRouter;\n"],"mappings":"AAAA,OAASA,MAAM,KAAQ,mBAAmB,CAY1C,KAAM,CAAAC,UAAU,CAAG,CACjBC,iBAAiBA,CACfC,KAAY,CACZC,MAA8B,CACM,CACpC,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,YAAY,CAAE,CACjB,KAAM,CAAAC,KAAK,CAAGF,MAAM,CAACG,MAAM,CACvBJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAAEC,CAAC,EAAKA,CAAC,CAACC,GAAG,GAAKP,MAAM,CAACG,MAAM,CAAC,CACtDJ,KAAK,CAACG,KAAK,CAEf,GAAIA,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,MAAO,KAAI,CACb,CAEA,OAAAM,MAAA,CAAAC,MAAA,IACKV,KAAK,EACRK,MAAM,CAAEL,KAAK,CAACK,MAAM,CAACM,GAAG,CAAC,CAACJ,CAAC,CAAEK,CAAC,GAC5BA,CAAC,GAAKT,KAAK,CAAAM,MAAA,CAAAC,MAAA,IACFH,CAAC,EAAEM,MAAM,CAAAJ,MAAA,CAAAC,MAAA,IAAOH,CAAC,CAACM,MAAM,CAAKZ,MAAM,CAACa,OAAO,CAACD,MAAA,CAAO,GACxDN,CAAC,IAGX,CAEA,IAAK,OAAO,CAAE,CACZ,KAAM,CAAAQ,SAAS,CAAGd,MAAM,CAACa,OAAsC,CAE/D,GACEC,SAAS,CAACV,MAAM,CAACW,MAAM,GAAK,CAAC,EAC7BD,SAAS,CAACV,MAAM,CAACY,IAAI,CAClBC,KAAuB,EAAK,CAAClB,KAAK,CAACmB,UAAU,CAACC,QAAQ,CAACF,KAAK,CAACG,IAAI,CAAC,CACpE,CACD,CACA,MAAO,KAAI,CACb,CAEA,GAAIN,SAAS,CAACO,KAAK,GAAK,KAAK,CAAE,CAC7B,GACEtB,KAAK,CAACmB,UAAU,CAACH,MAAM,GAAKD,SAAS,CAACI,UAAU,CAACH,MAAM,EACvDD,SAAS,CAACI,UAAU,CAACF,IAAI,CACtBI,IAAI,EAAK,CAACrB,KAAK,CAACmB,UAAU,CAACC,QAAQ,CAACC,IAAI,CAAC,CAC3C,CACD,CACA,MAAO,KAAI,CACb,CAEA,OAAAZ,MAAA,CAAAC,MAAA,IACKK,SAAS,EACZV,MAAM,CAAEU,SAAS,CAACV,MAAM,CAACM,GAAG,CAAEO,KAAK,EACjCA,KAAK,CAACV,GAAG,CAAGU,KAAK,CAAAT,MAAA,CAAAC,MAAA,IAAQQ,KAAK,EAAEV,GAAG,CAAG,GAAEU,KAAK,CAACG,IAAK,IAAGxB,MAAM,EAAG,IAAG,IAGxE,CAEA,MAAO,CAAAkB,SAAS,CAClB,CAEA,QACE,MAAO,KAAI,CAAC,CAElB,CAAC,CAEDQ,uBAAuBA,CAACtB,MAA8B,CAAE,CACtD,MAAO,CAAAA,MAAM,CAACC,IAAI,GAAK,UAAU,CACnC,CACF,CAAC,CAED,cAAe,CAAAJ,UAAU","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}