{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"styleInterpolator\",\"interpolationIndex\",\"current\",\"gesture\",\"next\",\"layout\",\"insets\",\"overlay\",\"overlayEnabled\",\"shadowEnabled\",\"gestureEnabled\",\"gestureDirection\",\"pageOverflowEnabled\",\"headerDarkContent\",\"children\",\"containerStyle\",\"contentStyle\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import Color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{forModalPresentationIOS}from'../../TransitionConfigs/CardStyleInterpolators';import CardAnimationContext from'../../utils/CardAnimationContext';import getDistanceForDirection from'../../utils/getDistanceForDirection';import getInvertedMultiplier from'../../utils/getInvertedMultiplier';import memoize from'../../utils/memoize';import{GestureState,PanGestureHandler}from'../GestureHandler';import ModalStatusBarManager from'../ModalStatusBarManager';import CardSheet from'./CardSheet';const GESTURE_VELOCITY_IMPACT=0.3;const TRUE=1;const FALSE=0;const GESTURE_RESPONSE_DISTANCE_HORIZONTAL=50;const GESTURE_RESPONSE_DISTANCE_VERTICAL=135;const useNativeDriver=false;const hasOpacityStyle=style=>{if(style){const flattenedStyle=StyleSheet.flatten(style);return flattenedStyle.opacity!=null;}return false;};export default class Card extends React.Component{static defaultProps={shadowEnabled:false,gestureEnabled:true,gestureVelocityImpact:GESTURE_VELOCITY_IMPACT,overlay:_ref=>{let{style}=_ref;return style?React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.overlay,style]}):null;}};componentDidMount(){this.animate({closing:this.props.closing});this.isCurrentlyMounted=true;}componentDidUpdate(prevProps){const{layout,gestureDirection,closing}=this.props;const{width,height}=layout;if(width!==prevProps.layout.width){this.layout.width.setValue(width);}if(height!==prevProps.layout.height){this.layout.height.setValue(height);}if(gestureDirection!==prevProps.gestureDirection){this.inverted.setValue(getInvertedMultiplier(gestureDirection));}const toValue=this.getAnimateToValue(this.props);if(this.getAnimateToValue(prevProps)!==toValue||this.lastToValue!==toValue){this.animate({closing});}}componentWillUnmount(){this.props.gesture.stopAnimation();this.isCurrentlyMounted=false;this.handleEndInteraction();}isCurrentlyMounted=false;isClosing=new Animated.Value(FALSE);inverted=new Animated.Value(getInvertedMultiplier(this.props.gestureDirection));layout={width:new Animated.Value(this.props.layout.width),height:new Animated.Value(this.props.layout.height)};isSwiping=new Animated.Value(FALSE);animate=_ref2=>{let{closing,velocity}=_ref2;const{gesture,transitionSpec,onOpen,onClose,onTransition}=this.props;const toValue=this.getAnimateToValue(Object.assign({},this.props,{closing}));this.lastToValue=toValue;this.isClosing.setValue(closing?TRUE:FALSE);const spec=closing?transitionSpec.close:transitionSpec.open;const animation=spec.animation==='spring'?Animated.spring:Animated.timing;this.setPointerEventsEnabled(!closing);this.handleStartInteraction();clearTimeout(this.pendingGestureCallback);onTransition===null||onTransition===void 0?void 0:onTransition({closing,gesture:velocity!==undefined});animation(gesture,Object.assign({},spec.config,{velocity,toValue,useNativeDriver,isInteraction:false})).start(_ref3=>{let{finished}=_ref3;this.handleEndInteraction();clearTimeout(this.pendingGestureCallback);if(finished){if(closing){onClose();}else{onOpen();}if(this.isCurrentlyMounted){this.forceUpdate();}}});};getAnimateToValue=_ref4=>{let{closing,layout,gestureDirection}=_ref4;if(!closing){return 0;}return getDistanceForDirection(layout,gestureDirection);};setPointerEventsEnabled=enabled=>{var _this$ref$current;const pointerEvents=enabled?'box-none':'none';(_this$ref$current=this.ref.current)===null||_this$ref$current===void 0?void 0:_this$ref$current.setPointerEvents(pointerEvents);};handleStartInteraction=()=>{if(this.interactionHandle===undefined){this.interactionHandle=InteractionManager.createInteractionHandle();}};handleEndInteraction=()=>{if(this.interactionHandle!==undefined){InteractionManager.clearInteractionHandle(this.interactionHandle);this.interactionHandle=undefined;}};handleGestureStateChange=_ref5=>{let{nativeEvent}=_ref5;const{layout,onClose,onGestureBegin,onGestureCanceled,onGestureEnd,gestureDirection,gestureVelocityImpact}=this.props;switch(nativeEvent.state){case GestureState.ACTIVE:this.isSwiping.setValue(TRUE);this.handleStartInteraction();onGestureBegin===null||onGestureBegin===void 0?void 0:onGestureBegin();break;case GestureState.CANCELLED:{this.isSwiping.setValue(FALSE);this.handleEndInteraction();const velocity=gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?nativeEvent.velocityY:nativeEvent.velocityX;this.animate({closing:this.props.closing,velocity});onGestureCanceled===null||onGestureCanceled===void 0?void 0:onGestureCanceled();break;}case GestureState.END:{this.isSwiping.setValue(FALSE);let distance;let translation;let velocity;if(gestureDirection==='vertical'||gestureDirection==='vertical-inverted'){distance=layout.height;translation=nativeEvent.translationY;velocity=nativeEvent.velocityY;}else{distance=layout.width;translation=nativeEvent.translationX;velocity=nativeEvent.velocityX;}const closing=(translation+velocity*gestureVelocityImpact)*getInvertedMultiplier(gestureDirection)>distance/2?velocity!==0||translation!==0:this.props.closing;this.animate({closing,velocity});if(closing){this.pendingGestureCallback=setTimeout(()=>{onClose();this.forceUpdate();},32);}onGestureEnd===null||onGestureEnd===void 0?void 0:onGestureEnd();break;}}};getInterpolatedStyle=memoize((styleInterpolator,animation)=>styleInterpolator(animation));getCardAnimation=memoize((interpolationIndex,current,next,layout,insetTop,insetRight,insetBottom,insetLeft)=>({index:interpolationIndex,current:{progress:current},next:next&&{progress:next},closing:this.isClosing,swiping:this.isSwiping,inverted:this.inverted,layouts:{screen:layout},insets:{top:insetTop,right:insetRight,bottom:insetBottom,left:insetLeft}}));gestureActivationCriteria(){const{layout,gestureDirection,gestureResponseDistance}=this.props;const enableTrackpadTwoFingerGesture=true;const distance=gestureResponseDistance!==undefined?gestureResponseDistance:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?GESTURE_RESPONSE_DISTANCE_VERTICAL:GESTURE_RESPONSE_DISTANCE_HORIZONTAL;if(gestureDirection==='vertical'){return{maxDeltaX:15,minOffsetY:5,hitSlop:{bottom:-layout.height+distance},enableTrackpadTwoFingerGesture};}else if(gestureDirection==='vertical-inverted'){return{maxDeltaX:15,minOffsetY:-5,hitSlop:{top:-layout.height+distance},enableTrackpadTwoFingerGesture};}else{const hitSlop=-layout.width+distance;const invertedMultiplier=getInvertedMultiplier(gestureDirection);if(invertedMultiplier===1){return{minOffsetX:5,maxDeltaY:20,hitSlop:{right:hitSlop},enableTrackpadTwoFingerGesture};}else{return{minOffsetX:-5,maxDeltaY:20,hitSlop:{left:hitSlop},enableTrackpadTwoFingerGesture};}}}ref=React.createRef();render(){const _this$props=this.props,{styleInterpolator,interpolationIndex,current,gesture,next,layout,insets,overlay,overlayEnabled,shadowEnabled,gestureEnabled,gestureDirection,pageOverflowEnabled,headerDarkContent,children,containerStyle:customContainerStyle,contentStyle}=_this$props,rest=_objectWithoutPropertiesLoose(_this$props,_excluded);const interpolationProps=this.getCardAnimation(interpolationIndex,current,next,layout,insets.top,insets.right,insets.bottom,insets.left);const interpolatedStyle=this.getInterpolatedStyle(styleInterpolator,interpolationProps);const{containerStyle,cardStyle,overlayStyle,shadowStyle}=interpolatedStyle;const handleGestureEvent=gestureEnabled?Animated.event([{nativeEvent:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?{translationY:gesture}:{translationX:gesture}}],{useNativeDriver}):undefined;const{backgroundColor}=StyleSheet.flatten(contentStyle||{});const isTransparent=typeof backgroundColor==='string'?Color(backgroundColor).alpha()===0:false;return React.createElement(CardAnimationContext.Provider,{value:interpolationProps},false&&overlayEnabled&&next&&getIsModalPresentation(styleInterpolator)?React.createElement(ModalStatusBarManager,{dark:headerDarkContent,layout:layout,insets:insets,style:cardStyle}):null,React.createElement(Animated.View,{style:{opacity:current},collapsable:false}),React.createElement(View,_extends({pointerEvents:\"box-none\",collapsable:false},rest),overlayEnabled?React.createElement(View,{pointerEvents:\"box-none\",style:StyleSheet.absoluteFill},overlay({style:overlayStyle})):null,React.createElement(Animated.View,{style:[styles.container,containerStyle,customContainerStyle],pointerEvents:\"box-none\"},React.createElement(PanGestureHandler,_extends({enabled:layout.width!==0&&gestureEnabled,onGestureEvent:handleGestureEvent,onHandlerStateChange:this.handleGestureStateChange},this.gestureActivationCriteria()),React.createElement(Animated.View,{needsOffscreenAlphaCompositing:hasOpacityStyle(cardStyle),style:[styles.container,cardStyle]},shadowEnabled&&shadowStyle&&!isTransparent?React.createElement(Animated.View,{style:[styles.shadow,gestureDirection==='horizontal'?[styles.shadowHorizontal,styles.shadowLeft]:gestureDirection==='horizontal-inverted'?[styles.shadowHorizontal,styles.shadowRight]:gestureDirection==='vertical'?[styles.shadowVertical,styles.shadowTop]:[styles.shadowVertical,styles.shadowBottom],{backgroundColor},shadowStyle],pointerEvents:\"none\"}):null,React.createElement(CardSheet,{ref:this.ref,enabled:pageOverflowEnabled,layout:layout,style:contentStyle},children))))));}}export const getIsModalPresentation=cardStyleInterpolator=>{return cardStyleInterpolator===forModalPresentationIOS||cardStyleInterpolator.name==='forModalPresentationIOS';};const styles=StyleSheet.create({container:{flex:1},overlay:{flex:1,backgroundColor:'#000'},shadow:{position:'absolute',shadowRadius:5,shadowColor:'#000',shadowOpacity:0.3},shadowHorizontal:{top:0,bottom:0,width:3,shadowOffset:{width:-1,height:1}},shadowLeft:{left:0},shadowRight:{right:0},shadowVertical:{left:0,right:0,height:3,shadowOffset:{width:1,height:-1}},shadowTop:{top:0},shadowBottom:{bottom:0}});","map":{"version":3,"names":["Color","React","Animated","InteractionManager","Platform","StyleSheet","View","forModalPresentationIOS","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GestureState","PanGestureHandler","ModalStatusBarManager","CardSheet","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","hasOpacityStyle","style","flattenedStyle","flatten","opacity","Card","Component","defaultProps","shadowEnabled","gestureEnabled","gestureVelocityImpact","overlay","_ref","createElement","pointerEvents","styles","componentDidMount","animate","closing","props","isCurrentlyMounted","componentDidUpdate","prevProps","layout","gestureDirection","width","height","setValue","inverted","toValue","getAnimateToValue","lastToValue","componentWillUnmount","gesture","stopAnimation","handleEndInteraction","isClosing","Value","isSwiping","_ref2","velocity","transitionSpec","onOpen","onClose","onTransition","Object","assign","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","_ref3","finished","forceUpdate","_ref4","enabled","_this$ref$current","ref","current","setPointerEvents","interactionHandle","createInteractionHandle","clearInteractionHandle","handleGestureStateChange","_ref5","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","state","ACTIVE","CANCELLED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","getInterpolatedStyle","styleInterpolator","getCardAnimation","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","layouts","screen","insets","top","right","bottom","left","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","createRef","render","_this$props","overlayEnabled","pageOverflowEnabled","headerDarkContent","children","containerStyle","customContainerStyle","contentStyle","rest","_objectWithoutPropertiesLoose","_excluded","interpolationProps","interpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","alpha","Provider","value","getIsModalPresentation","dark","collapsable","_extends","absoluteFill","container","onGestureEvent","onHandlerStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","cardStyleInterpolator","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["C:\\Users\\Admin\\Documents\\shopnow-app\\node_modules\\@react-navigation\\stack\\src\\views\\Stack\\Card.tsx"],"sourcesContent":["import Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet, { CardSheetRef } from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation<number>;\n  current: Animated.AnimatedInterpolation<number>;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  headerDarkContent: boolean | undefined;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { gesture, transitionSpec, onOpen, onClose, onTransition } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.ref.current?.setPointerEvents(pointerEvents);\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation<number>,\n      next: Animated.AnimatedInterpolation<number> | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  private ref = React.createRef<CardSheetRef>();\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        {\n          // StatusBar messes with translucent status bar on Android\n          // So we should only enable it on iOS\n          Platform.OS === 'ios' &&\n          overlayEnabled &&\n          next &&\n          getIsModalPresentation(styleInterpolator) ? (\n            <ModalStatusBarManager\n              dark={headerDarkContent}\n              layout={layout}\n              insets={insets}\n              style={cardStyle}\n            />\n          ) : null\n        }\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View\n          pointerEvents=\"box-none\"\n          // Make sure this view is not removed on the new architecture, as it causes focus loss during navigation on Android.\n          // This can happen when the view flattening results in different trees - due to `overflow` style changing in a parent.\n          collapsable={false}\n          {...rest}\n        >\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.ref}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nexport const getIsModalPresentation = (\n  cardStyleInterpolator: StackCardStyleInterpolator\n) => {\n  return (\n    cardStyleInterpolator === forModalPresentationIOS ||\n    // Handle custom modal presentation interpolators as well\n    cardStyleInterpolator.name === 'forModalPresentationIOS'\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"],"mappings":"spBAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,QAAAC,QAAA,qDAAAC,kBAAA,+DAAAC,QAAA,qDAAAC,UAAA,uDAAAC,IAAA,0CAa9B,OAASC,uBAAuB,KAAQ,gDAAgD,CAQxF,MAAO,CAAAC,oBAAoB,KAAM,kCAAkC,CACnE,MAAO,CAAAC,uBAAuB,KAAM,qCAAqC,CACzE,MAAO,CAAAC,qBAAqB,KAAM,mCAAmC,CACrE,MAAO,CAAAC,OAAO,KAAM,qBAAqB,CACzC,OACEC,YAAY,CACZC,iBAAiB,KAEZ,mBAAmB,CAC1B,MAAO,CAAAC,qBAAqB,KAAM,0BAA0B,CAC5D,MAAO,CAAAC,SAAS,KAAwB,aAAa,CAqCrD,KAAM,CAAAC,uBAAuB,CAAG,GAAG,CAEnC,KAAM,CAAAC,IAAI,CAAG,CAAC,CACd,KAAM,CAAAC,KAAK,CAAG,CAAC,CAKf,KAAM,CAAAC,oCAAoC,CAAG,EAAE,CAC/C,KAAM,CAAAC,kCAAkC,CAAG,GAAG,CAE9C,KAAM,CAAAC,eAAe,MAAwB,CAE7C,KAAM,CAAAC,eAAe,CAAIC,KAAU,EAAK,CACtC,GAAIA,KAAK,CAAE,CACT,KAAM,CAAAC,cAAc,CAAGnB,UAAU,CAACoB,OAAO,CAACF,KAAK,CAAC,CAChD,MAAO,CAAAC,cAAc,CAACE,OAAO,EAAI,IAAI,CACvC,CAEA,MAAO,MAAK,CACd,CAAC,CAED,cAAe,MAAM,CAAAC,IAAI,QAAS,CAAA1B,KAAK,CAAC2B,SAAiB,CACvD,MAAO,CAAAC,YAAY,CAAG,CACpBC,aAAa,CAAE,KAAK,CACpBC,cAAc,CAAE,IAAI,CACpBC,qBAAqB,CAAEhB,uBAAuB,CAC9CiB,OAAO,CAAEC,IAAA,MAAC,CACRX,KAGF,CAAC,CAAAW,IAAA,OACC,CAAAX,KAAK,CACHtB,KAAA,CAAAkC,aAAA,CAACjC,QAAQ,CAACI,IAAI,EAAC8B,aAAa,CAAC,MAAM,CAACb,KAAK,CAAE,CAACc,MAAM,CAACJ,OAAO,CAAEV,KAAK,CAAE,EAAG,CACpE,IAAI,EACZ,CAAC,CAEDe,iBAAiBA,CAAA,CAAG,CAClB,IAAI,CAACC,OAAO,CAAC,CAAEC,OAAO,CAAE,IAAI,CAACC,KAAK,CAACD,OAAQ,CAAC,CAAC,CAC7C,IAAI,CAACE,kBAAkB,CAAG,IAAI,CAChC,CAEAC,kBAAkBA,CAACC,SAAgB,CAAE,CACnC,KAAM,CAAEC,MAAM,CAAEC,gBAAgB,CAAEN,OAAQ,CAAC,CAAG,IAAI,CAACC,KAAK,CACxD,KAAM,CAAEM,KAAK,CAAEC,MAAO,CAAC,CAAGH,MAAM,CAEhC,GAAIE,KAAK,GAAKH,SAAS,CAACC,MAAM,CAACE,KAAK,CAAE,CACpC,IAAI,CAACF,MAAM,CAACE,KAAK,CAACE,QAAQ,CAACF,KAAK,CAAC,CACnC,CAEA,GAAIC,MAAM,GAAKJ,SAAS,CAACC,MAAM,CAACG,MAAM,CAAE,CACtC,IAAI,CAACH,MAAM,CAACG,MAAM,CAACC,QAAQ,CAACD,MAAM,CAAC,CACrC,CAEA,GAAIF,gBAAgB,GAAKF,SAAS,CAACE,gBAAgB,CAAE,CACnD,IAAI,CAACI,QAAQ,CAACD,QAAQ,CAACvC,qBAAqB,CAACoC,gBAAgB,CAAC,CAAC,CACjE,CAEA,KAAM,CAAAK,OAAO,CAAG,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACX,KAAK,CAAC,CAElD,GACE,IAAI,CAACW,iBAAiB,CAACR,SAAS,CAAC,GAAKO,OAAO,EAC7C,IAAI,CAACE,WAAW,GAAKF,OAAO,CAC5B,CAMA,IAAI,CAACZ,OAAO,CAAC,CAAEC,OAAQ,CAAC,CAAC,CAC3B,CACF,CAEAc,oBAAoBA,CAAA,CAAG,CACrB,IAAI,CAACb,KAAK,CAACc,OAAO,CAACC,aAAa,EAAE,CAClC,IAAI,CAACd,kBAAkB,CAAG,KAAK,CAC/B,IAAI,CAACe,oBAAoB,EAAE,CAC7B,CAEQf,kBAAkB,CAAG,KAAK,CAE1BgB,SAAS,CAAG,GAAI,CAAAxD,QAAQ,CAACyD,KAAK,CAACzC,KAAK,CAAC,CAErCgC,QAAQ,CAAG,GAAI,CAAAhD,QAAQ,CAACyD,KAAK,CACnCjD,qBAAqB,CAAC,IAAI,CAAC+B,KAAK,CAACK,gBAAgB,CAAC,CACnD,CAEOD,MAAM,CAAG,CACfE,KAAK,CAAE,GAAI,CAAA7C,QAAQ,CAACyD,KAAK,CAAC,IAAI,CAAClB,KAAK,CAACI,MAAM,CAACE,KAAK,CAAC,CAClDC,MAAM,CAAE,GAAI,CAAA9C,QAAQ,CAACyD,KAAK,CAAC,IAAI,CAAClB,KAAK,CAACI,MAAM,CAACG,MAAM,CACrD,CAAC,CAEOY,SAAS,CAAG,GAAI,CAAA1D,QAAQ,CAACyD,KAAK,CAACzC,KAAK,CAAC,CAQrCqB,OAAO,CAAGsB,KAAA,EAMZ,IANa,CACjBrB,OAAO,CACPsB,QAIF,CAAC,CAAAD,KAAA,CACC,KAAM,CAAEN,OAAO,CAAEQ,cAAc,CAAEC,MAAM,CAAEC,OAAO,CAAEC,YAAa,CAAC,CAC9D,IAAI,CAACzB,KAAK,CAEZ,KAAM,CAAAU,OAAO,CAAG,IAAI,CAACC,iBAAiB,CAAAe,MAAA,CAAAC,MAAA,IACjC,IAAI,CAAC3B,KAAK,EACbD,OAAA,EACD,CAAC,CAEF,IAAI,CAACa,WAAW,CAAGF,OAAO,CAE1B,IAAI,CAACO,SAAS,CAACT,QAAQ,CAACT,OAAO,CAAGvB,IAAI,CAAGC,KAAK,CAAC,CAE/C,KAAM,CAAAmD,IAAI,CAAG7B,OAAO,CAAGuB,cAAc,CAACO,KAAK,CAAGP,cAAc,CAACQ,IAAI,CAEjE,KAAM,CAAAC,SAAS,CACbH,IAAI,CAACG,SAAS,GAAK,QAAQ,CAAGtE,QAAQ,CAACuE,MAAM,CAAGvE,QAAQ,CAACwE,MAAM,CAEjE,IAAI,CAACC,uBAAuB,CAAC,CAACnC,OAAO,CAAC,CACtC,IAAI,CAACoC,sBAAsB,EAAE,CAE7BC,YAAY,CAAC,IAAI,CAACC,sBAAsB,CAAC,CAEzCZ,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAG,CAAE1B,OAAO,CAAEe,OAAO,CAAEO,QAAQ,GAAKiB,SAAU,CAAC,CAAC,CAC5DP,SAAS,CAACjB,OAAO,CAAAY,MAAA,CAAAC,MAAA,IACZC,IAAI,CAACW,MAAM,EACdlB,QAAQ,CACRX,OAAO,CACP9B,eAAe,CACf4D,aAAa,CAAE,OAChB,CAAC,CAACC,KAAK,CAACC,KAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,KAAA,CACpB,IAAI,CAAC1B,oBAAoB,EAAE,CAE3BoB,YAAY,CAAC,IAAI,CAACC,sBAAsB,CAAC,CAEzC,GAAIM,QAAQ,CAAE,CACZ,GAAI5C,OAAO,CAAE,CACXyB,OAAO,EAAE,CACX,CAAC,IAAM,CACLD,MAAM,EAAE,CACV,CAEA,GAAI,IAAI,CAACtB,kBAAkB,CAAE,CAE3B,IAAI,CAAC2C,WAAW,EAAE,CACpB,CACF,CACF,CAAC,CAAC,CACJ,CAAC,CAEOjC,iBAAiB,CAAGkC,KAAA,EAQtB,IARuB,CAC3B9C,OAAO,CACPK,MAAM,CACNC,gBAKF,CAAC,CAAAwC,KAAA,CACC,GAAI,CAAC9C,OAAO,CAAE,CACZ,MAAO,EAAC,CACV,CAEA,MAAO,CAAA/B,uBAAuB,CAACoC,MAAM,CAAEC,gBAAgB,CAAC,CAC1D,CAAC,CAEO6B,uBAAuB,CAAIY,OAAgB,EAAK,KAAAC,iBAAA,CACtD,KAAM,CAAApD,aAAa,CAAGmD,OAAO,CAAG,UAAU,CAAG,MAAM,CAEnD,CAAAC,iBAAA,KAAI,CAACC,GAAG,CAACC,OAAO,UAAAF,iBAAA,iBAAhBA,iBAAA,CAAkBG,gBAAgB,CAACvD,aAAa,CAAC,CACnD,CAAC,CAEOwC,sBAAsB,CAAGA,CAAA,GAAM,CACrC,GAAI,IAAI,CAACgB,iBAAiB,GAAKb,SAAS,CAAE,CACxC,IAAI,CAACa,iBAAiB,CAAGzF,kBAAkB,CAAC0F,uBAAuB,EAAE,CACvE,CACF,CAAC,CAEOpC,oBAAoB,CAAGA,CAAA,GAAM,CACnC,GAAI,IAAI,CAACmC,iBAAiB,GAAKb,SAAS,CAAE,CACxC5E,kBAAkB,CAAC2F,sBAAsB,CAAC,IAAI,CAACF,iBAAiB,CAAC,CACjE,IAAI,CAACA,iBAAiB,CAAGb,SAAS,CACpC,CACF,CAAC,CAEOgB,wBAAwB,CAAGC,KAAA,EAEE,IAFD,CAClCC,WAC6B,CAAC,CAAAD,KAAA,CAC9B,KAAM,CACJnD,MAAM,CACNoB,OAAO,CACPiC,cAAc,CACdC,iBAAiB,CACjBC,YAAY,CACZtD,gBAAgB,CAChBd,qBACF,CAAC,CAAG,IAAI,CAACS,KAAK,CAEd,OAAQwD,WAAW,CAACI,KAAK,EACvB,IAAK,CAAAzF,YAAY,CAAC0F,MAAM,CACtB,IAAI,CAAC1C,SAAS,CAACX,QAAQ,CAAChC,IAAI,CAAC,CAC7B,IAAI,CAAC2D,sBAAsB,EAAE,CAC7BsB,cAAc,SAAdA,cAAc,iBAAdA,cAAc,EAAI,CAClB,MACF,IAAK,CAAAtF,YAAY,CAAC2F,SAAS,CAAE,CAC3B,IAAI,CAAC3C,SAAS,CAACX,QAAQ,CAAC/B,KAAK,CAAC,CAC9B,IAAI,CAACuC,oBAAoB,EAAE,CAE3B,KAAM,CAAAK,QAAQ,CACZhB,gBAAgB,GAAK,UAAU,EAC/BA,gBAAgB,GAAK,mBAAmB,CACpCmD,WAAW,CAACO,SAAS,CACrBP,WAAW,CAACQ,SAAS,CAE3B,IAAI,CAAClE,OAAO,CAAC,CAAEC,OAAO,CAAE,IAAI,CAACC,KAAK,CAACD,OAAO,CAAEsB,QAAS,CAAC,CAAC,CAEvDqC,iBAAiB,SAAjBA,iBAAiB,iBAAjBA,iBAAiB,EAAI,CACrB,MACF,CACA,IAAK,CAAAvF,YAAY,CAAC8F,GAAG,CAAE,CACrB,IAAI,CAAC9C,SAAS,CAACX,QAAQ,CAAC/B,KAAK,CAAC,CAE9B,GAAI,CAAAyF,QAAQ,CACZ,GAAI,CAAAC,WAAW,CACf,GAAI,CAAA9C,QAAQ,CAEZ,GACEhB,gBAAgB,GAAK,UAAU,EAC/BA,gBAAgB,GAAK,mBAAmB,CACxC,CACA6D,QAAQ,CAAG9D,MAAM,CAACG,MAAM,CACxB4D,WAAW,CAAGX,WAAW,CAACY,YAAY,CACtC/C,QAAQ,CAAGmC,WAAW,CAACO,SAAS,CAClC,CAAC,IAAM,CACLG,QAAQ,CAAG9D,MAAM,CAACE,KAAK,CACvB6D,WAAW,CAAGX,WAAW,CAACa,YAAY,CACtChD,QAAQ,CAAGmC,WAAW,CAACQ,SAAS,CAClC,CAEA,KAAM,CAAAjE,OAAO,CACX,CAACoE,WAAW,CAAG9C,QAAQ,CAAG9B,qBAAqB,EAC7CtB,qBAAqB,CAACoC,gBAAgB,CAAC,CACzC6D,QAAQ,CAAG,CAAC,CACR7C,QAAQ,GAAK,CAAC,EAAI8C,WAAW,GAAK,CAAC,CACnC,IAAI,CAACnE,KAAK,CAACD,OAAO,CAExB,IAAI,CAACD,OAAO,CAAC,CAAEC,OAAO,CAAEsB,QAAS,CAAC,CAAC,CAEnC,GAAItB,OAAO,CAAE,CAGX,IAAI,CAACsC,sBAAsB,CAAGiC,UAAU,CAAC,IAAM,CAC7C9C,OAAO,EAAE,CAIT,IAAI,CAACoB,WAAW,EAAE,CACpB,CAAC,CAAE,EAAE,CAAkB,CACzB,CAEAe,YAAY,SAAZA,YAAY,iBAAZA,YAAY,EAAI,CAChB,MACF,CAAC,CAEL,CAAC,CAGOY,oBAAoB,CAAGrG,OAAO,CACpC,CACEsG,iBAA6C,CAC7CzC,SAAsC,GACnCyC,iBAAiB,CAACzC,SAAS,CAAC,CAClC,CAGO0C,gBAAgB,CAAGvG,OAAO,CAChC,CACEwG,kBAA0B,CAC1BzB,OAA+C,CAC/C0B,IAAwD,CACxDvE,MAAc,CACdwE,QAAgB,CAChBC,UAAkB,CAClBC,WAAmB,CACnBC,SAAiB,IACb,CACJC,KAAK,CAAEN,kBAAkB,CACzBzB,OAAO,CAAE,CAAEgC,QAAQ,CAAEhC,OAAQ,CAAC,CAC9B0B,IAAI,CAAEA,IAAI,EAAI,CAAEM,QAAQ,CAAEN,IAAK,CAAC,CAChC5E,OAAO,CAAE,IAAI,CAACkB,SAAS,CACvBiE,OAAO,CAAE,IAAI,CAAC/D,SAAS,CACvBV,QAAQ,CAAE,IAAI,CAACA,QAAQ,CACvB0E,OAAO,CAAE,CACPC,MAAM,CAAEhF,MACV,CAAC,CACDiF,MAAM,CAAE,CACNC,GAAG,CAAEV,QAAQ,CACbW,KAAK,CAAEV,UAAU,CACjBW,MAAM,CAAEV,WAAW,CACnBW,IAAI,CAAEV,SACR,CACF,CAAC,CAAC,CACH,CAEOW,yBAAyBA,CAAA,CAAG,CAClC,KAAM,CAAEtF,MAAM,CAAEC,gBAAgB,CAAEsF,uBAAwB,CAAC,CAAG,IAAI,CAAC3F,KAAK,CACxE,KAAM,CAAA4F,8BAA8B,CAAG,IAAI,CAE3C,KAAM,CAAA1B,QAAQ,CACZyB,uBAAuB,GAAKrD,SAAS,CACjCqD,uBAAuB,CACvBtF,gBAAgB,GAAK,UAAU,EAC/BA,gBAAgB,GAAK,mBAAmB,CACxC1B,kCAAkC,CAClCD,oCAAoC,CAE1C,GAAI2B,gBAAgB,GAAK,UAAU,CAAE,CACnC,MAAO,CACLwF,SAAS,CAAE,EAAE,CACbC,UAAU,CAAE,CAAC,CACbC,OAAO,CAAE,CAAEP,MAAM,CAAE,CAACpF,MAAM,CAACG,MAAM,CAAG2D,QAAS,CAAC,CAC9C0B,8BACF,CAAC,CACH,CAAC,IAAM,IAAIvF,gBAAgB,GAAK,mBAAmB,CAAE,CACnD,MAAO,CACLwF,SAAS,CAAE,EAAE,CACbC,UAAU,CAAE,CAAC,CAAC,CACdC,OAAO,CAAE,CAAET,GAAG,CAAE,CAAClF,MAAM,CAACG,MAAM,CAAG2D,QAAS,CAAC,CAC3C0B,8BACF,CAAC,CACH,CAAC,IAAM,CACL,KAAM,CAAAG,OAAO,CAAG,CAAC3F,MAAM,CAACE,KAAK,CAAG4D,QAAQ,CACxC,KAAM,CAAA8B,kBAAkB,CAAG/H,qBAAqB,CAACoC,gBAAgB,CAAC,CAElE,GAAI2F,kBAAkB,GAAK,CAAC,CAAE,CAC5B,MAAO,CACLC,UAAU,CAAE,CAAC,CACbC,SAAS,CAAE,EAAE,CACbH,OAAO,CAAE,CAAER,KAAK,CAAEQ,OAAQ,CAAC,CAC3BH,8BACF,CAAC,CACH,CAAC,IAAM,CACL,MAAO,CACLK,UAAU,CAAE,CAAC,CAAC,CACdC,SAAS,CAAE,EAAE,CACbH,OAAO,CAAE,CAAEN,IAAI,CAAEM,OAAQ,CAAC,CAC1BH,8BACF,CAAC,CACH,CACF,CACF,CAEQ5C,GAAG,CAAGxF,KAAK,CAAC2I,SAAS,EAAgB,CAE7CC,MAAMA,CAAA,CAAG,CACP,MAAAC,WAAA,CAmBI,IAAI,CAACrG,KAAK,CAnBR,CACJwE,iBAAiB,CACjBE,kBAAkB,CAClBzB,OAAO,CACPnC,OAAO,CACP6D,IAAI,CACJvE,MAAM,CACNiF,MAAM,CACN7F,OAAO,CACP8G,cAAc,CACdjH,aAAa,CACbC,cAAc,CACde,gBAAgB,CAChBkG,mBAAmB,CACnBC,iBAAiB,CACjBC,QAAQ,CACRC,cAAc,CAAEC,oBAAoB,CACpCC,YAEF,CAAC,CAAAP,WAAA,CADIQ,IAAA,CAAAC,6BAAA,CAAAT,WAAA,CAAAU,SAAA,EAGL,KAAM,CAAAC,kBAAkB,CAAG,IAAI,CAACvC,gBAAgB,CAC9CC,kBAAkB,CAClBzB,OAAO,CACP0B,IAAI,CACJvE,MAAM,CACNiF,MAAM,CAACC,GAAG,CACVD,MAAM,CAACE,KAAK,CACZF,MAAM,CAACG,MAAM,CACbH,MAAM,CAACI,IAAI,CACZ,CAED,KAAM,CAAAwB,iBAAiB,CAAG,IAAI,CAAC1C,oBAAoB,CACjDC,iBAAiB,CACjBwC,kBAAkB,CACnB,CAED,KAAM,CAAEN,cAAc,CAAEQ,SAAS,CAAEC,YAAY,CAAEC,WAAY,CAAC,CAC5DH,iBAAiB,CAEnB,KAAM,CAAAI,kBAAkB,CAAG/H,cAAc,CACrC7B,QAAQ,CAAC6J,KAAK,CACZ,CACE,CACE9D,WAAW,CACTnD,gBAAgB,GAAK,UAAU,EAC/BA,gBAAgB,GAAK,mBAAmB,CACpC,CAAE+D,YAAY,CAAEtD,OAAQ,CAAC,CACzB,CAAEuD,YAAY,CAAEvD,OAAQ,CAChC,CAAC,CACF,CACD,CAAElC,eAAgB,CAAC,CACpB,CACD0D,SAAS,CAEb,KAAM,CAAEiF,eAAgB,CAAC,CAAG3J,UAAU,CAACoB,OAAO,CAAC4H,YAAY,EAAI,CAAC,CAAC,CAAC,CAClE,KAAM,CAAAY,aAAa,CACjB,MAAO,CAAAD,eAAe,GAAK,QAAQ,CAC/BhK,KAAK,CAACgK,eAAe,CAAC,CAACE,KAAK,EAAE,GAAK,CAAC,CACpC,KAAK,CAEX,MACE,CAAAjK,KAAA,CAAAkC,aAAA,CAAC3B,oBAAoB,CAAC2J,QAAQ,EAACC,KAAK,CAAEX,kBAAmB,EAIrD,OACAV,cAAc,EACd3B,IAAI,EACJiD,sBAAsB,CAACpD,iBAAiB,CAAC,CACvChH,KAAA,CAAAkC,aAAA,CAACrB,qBAAqB,EACpBwJ,IAAI,CAAErB,iBAAkB,CACxBpG,MAAM,CAAEA,MAAO,CACfiF,MAAM,CAAEA,MAAO,CACfvG,KAAK,CAAEoI,SAAU,EACjB,CACA,IAAI,CAEV1J,KAAA,CAAAkC,aAAA,CAACjC,QAAQ,CAACI,IAAI,EACZiB,KAAK,CAAE,CAKLG,OAAO,CAAEgE,OACX,EAEA6E,WAAW,CAAE,KAAM,EACnB,CACFtK,KAAA,CAAAkC,aAAA,CAAC7B,IAAI,CAAAkK,QAAA,EACHpI,aAAa,CAAC,WAGdmI,WAAW,CAAE,KAAM,EACfjB,IAAI,EAEPP,cAAc,CACb9I,KAAA,CAAAkC,aAAA,CAAC7B,IAAI,EAAC8B,aAAa,CAAC,UAAU,CAACb,KAAK,CAAElB,UAAU,CAACoK,YAAa,EAC3DxI,OAAO,CAAC,CAAEV,KAAK,CAAEqI,YAAa,CAAC,CAAC,CAC5B,CACL,IAAI,CACR3J,KAAA,CAAAkC,aAAA,CAACjC,QAAQ,CAACI,IAAI,EACZiB,KAAK,CAAE,CAACc,MAAM,CAACqI,SAAS,CAAEvB,cAAc,CAAEC,oBAAoB,CAAE,CAChEhH,aAAa,CAAC,UAAU,EAExBnC,KAAA,CAAAkC,aAAA,CAACtB,iBAAiB,CAAA2J,QAAA,EAChBjF,OAAO,CAAE1C,MAAM,CAACE,KAAK,GAAK,CAAC,EAAIhB,cAAe,CAC9C4I,cAAc,CAAEb,kBAAmB,CACnCc,oBAAoB,CAAE,IAAI,CAAC7E,wBAAyB,EAChD,IAAI,CAACoC,yBAAyB,EAAE,EAEpClI,KAAA,CAAAkC,aAAA,CAACjC,QAAQ,CAACI,IAAI,EACZuK,8BAA8B,CAAEvJ,eAAe,CAACqI,SAAS,CAAE,CAC3DpI,KAAK,CAAE,CAACc,MAAM,CAACqI,SAAS,CAAEf,SAAS,CAAE,EAEpC7H,aAAa,EAAI+H,WAAW,EAAI,CAACI,aAAa,CAC7ChK,KAAA,CAAAkC,aAAA,CAACjC,QAAQ,CAACI,IAAI,EACZiB,KAAK,CAAE,CACLc,MAAM,CAACyI,MAAM,CACbhI,gBAAgB,GAAK,YAAY,CAC7B,CAACT,MAAM,CAAC0I,gBAAgB,CAAE1I,MAAM,CAAC2I,UAAU,CAAC,CAC5ClI,gBAAgB,GAAK,qBAAqB,CAC1C,CAACT,MAAM,CAAC0I,gBAAgB,CAAE1I,MAAM,CAAC4I,WAAW,CAAC,CAC7CnI,gBAAgB,GAAK,UAAU,CAC/B,CAACT,MAAM,CAAC6I,cAAc,CAAE7I,MAAM,CAAC8I,SAAS,CAAC,CACzC,CAAC9I,MAAM,CAAC6I,cAAc,CAAE7I,MAAM,CAAC+I,YAAY,CAAC,CAChD,CAAEpB,eAAgB,CAAC,CACnBH,WAAW,CACX,CACFzH,aAAa,CAAC,MAAM,EACpB,CACA,IAAI,CACRnC,KAAA,CAAAkC,aAAA,CAACpB,SAAS,EACR0E,GAAG,CAAE,IAAI,CAACA,GAAI,CACdF,OAAO,CAAEyD,mBAAoB,CAC7BnG,MAAM,CAAEA,MAAO,CACftB,KAAK,CAAE8H,YAAa,EAEnBH,QAAQ,CACC,CACE,CACE,CACN,CACX,CACuB,CAEpC,CACF,CAEA,MAAO,MAAM,CAAAmB,sBAAsB,CACjCgB,qBAAiD,EAC9C,CACH,MACE,CAAAA,qBAAqB,GAAK9K,uBAAuB,EAEjD8K,qBAAqB,CAACC,IAAI,GAAK,yBAAyB,CAE5D,CAAC,CAED,KAAM,CAAAjJ,MAAM,CAAGhC,UAAU,CAACkL,MAAM,CAAC,CAC/Bb,SAAS,CAAE,CACTc,IAAI,CAAE,CACR,CAAC,CACDvJ,OAAO,CAAE,CACPuJ,IAAI,CAAE,CAAC,CACPxB,eAAe,CAAE,MACnB,CAAC,CACDc,MAAM,CAAE,CACNW,QAAQ,CAAE,UAAU,CACpBC,YAAY,CAAE,CAAC,CACfC,WAAW,CAAE,MAAM,CACnBC,aAAa,CAAE,GACjB,CAAC,CACDb,gBAAgB,CAAE,CAChBhD,GAAG,CAAE,CAAC,CACNE,MAAM,CAAE,CAAC,CACTlF,KAAK,CAAE,CAAC,CACR8I,YAAY,CAAE,CAAE9I,KAAK,CAAE,CAAC,CAAC,CAAEC,MAAM,CAAE,CAAE,CACvC,CAAC,CACDgI,UAAU,CAAE,CACV9C,IAAI,CAAE,CACR,CAAC,CACD+C,WAAW,CAAE,CACXjD,KAAK,CAAE,CACT,CAAC,CACDkD,cAAc,CAAE,CACdhD,IAAI,CAAE,CAAC,CACPF,KAAK,CAAE,CAAC,CACRhF,MAAM,CAAE,CAAC,CACT6I,YAAY,CAAE,CAAE9I,KAAK,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAC,CAAE,CACvC,CAAC,CACDmI,SAAS,CAAE,CACTpD,GAAG,CAAE,CACP,CAAC,CACDqD,YAAY,CAAE,CACZnD,MAAM,CAAE,CACV,CACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}